<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Convert-ConsolePalette</command:name>
<command:verb>Convert</command:verb>
<command:noun>ConsolePalette</command:noun>
<maml:description><maml:para>Converts the current 16 Color console palette by shifting either the dark or light colors to darker or lighter shades.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Converts a 16 Color console palette by shifting either the dark or light colors to darker or lighter shades.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Convert-ConsolePalette</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BrightShift</maml:name>
<maml:Description><maml:para>How much to shift the bright colors. Positive values make the colors brighter, negative values make them darker
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Copy</maml:name>
<maml:Description><maml:para>By default, the colors are modified in-place. If copy is set: - the dark colors start with the value of the bright colors
</maml:para>
<maml:para>- the light colors start at the value of the dark colors
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Convert-ConsolePalette</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DarkShift</maml:name>
<maml:Description><maml:para>How much to shift the dark colors. Positive values make the colors brighter, negative values make them darker
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Copy</maml:name>
<maml:Description><maml:para>By default, the colors are modified in-place. If copy is set: - the dark colors start with the value of the bright colors
</maml:para>
<maml:para>- the light colors start at the value of the dark colors
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BrightShift</maml:name>
<maml:Description><maml:para>How much to shift the bright colors. Positive values make the colors brighter, negative values make them darker
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Copy</maml:name>
<maml:Description><maml:para>By default, the colors are modified in-place. If copy is set: - the dark colors start with the value of the bright colors
</maml:para>
<maml:para>- the light colors start at the value of the dark colors
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DarkShift</maml:name>
<maml:Description><maml:para>How much to shift the dark colors. Positive values make the colors brighter, negative values make them darker
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Convert-ConsolePalette -BrightShift 20 -Copy</dev:code>
<dev:remarks><maml:para>Copies the Dark* colors from the console palette to the bright side and brightens them by 20 (of 100) luminance.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>ConvertFrom-iTermColors</command:name>
<command:verb>ConvertFrom</command:verb>
<command:noun>iTermColors</command:noun>
<maml:description><maml:para>Convert a .itermcolors XML file into a (partial) PANSIES theme for your PowerShell console
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Generate a PANSIES PowerShell theme from iTermColors.
</maml:para>
<maml:para>If you start with a working iTerm theme, you will get the 16 ConsoleColors plus the foreground/background, but they often include the colors for selection and emphasis in PSReadLine, as well.
</maml:para>
<maml:para>For a huge collection of iTermColors files you can use, visit https:#ithub.com/mbadolato/iTerm2-Color-Schemes
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>ConvertFrom-iTermColors</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="PSPath, Name"><maml:name>Theme</maml:name>
<maml:Description><maml:para>The name of (or full path to) an XML PList itermcolors scheme If you provide just a name, will search recursively for an .itermcolors file in the current folder
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Scope</maml:name>
<maml:Description><maml:para>User or Machine (supports storing themes per-user or shared for all users). Defaults to User.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">User</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Machine</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>User</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you with the file names for confirmation before running the conversion.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Overwrite any existing theme file
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Output the theme after converting it so you can, for instance, pipe it to Show-Theme
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Update</maml:name>
<maml:Description><maml:para>Update any existing theme file. You can use this to complement a previously exported VSCode theme with matching ConsoleColors.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows the file names that would be converted if the conversion runs. The conversion is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you with the file names for confirmation before running the conversion.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Overwrite any existing theme file
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Output the theme after converting it so you can, for instance, pipe it to Show-Theme
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Scope</maml:name>
<maml:Description><maml:para>User or Machine (supports storing themes per-user or shared for all users). Defaults to User.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>User</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="PSPath, Name"><maml:name>Theme</maml:name>
<maml:Description><maml:para>The name of (or full path to) an XML PList itermcolors scheme If you provide just a name, will search recursively for an .itermcolors file in the current folder
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Update</maml:name>
<maml:Description><maml:para>Update any existing theme file. You can use this to complement a previously exported VSCode theme with matching ConsoleColors.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows the file names that would be converted if the conversion runs. The conversion is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>[string] the name of the theme</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>[PSCustomObject] representing the theme (if -Pasthru)</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>The conversion outputs a .theme.psd1 file to AppData or ProgramData
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>EXAMPLE 1</maml:title>
<dev:code>ConvertFrom-iTermColors Argonaut</dev:code>
<dev:remarks><maml:para>Will find the Argonaut.itermcolors file in the current directory (or in the module storage path)
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>ConvertFrom-VSCodeTheme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Export-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Import-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Show-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>ConvertFrom-VSCodeTheme</command:name>
<command:verb>ConvertFrom</command:verb>
<command:noun>VSCodeTheme</command:noun>
<maml:description><maml:para>Convert a VSCode Theme file into a partial theme
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Attempts to generate a PANSIES Powershell theme from a VSCode Theme.
</maml:para>
<maml:para>This feature is still experimental, and so far, includes theming:
</maml:para>
<maml:para>- The ConsoleColor palette (the base 16 ConsoleColors) from the `terminal.ansi*` colors in the VSCode theme
</maml:para>
<maml:para>- The PSReadLine colors (requires PSReadline 2.0.0 beta 2) from various named scopes
</maml:para>
<maml:para>- The PrivateData ConsoleColors (used for foreground of the output streams: Verbose, Error, Warning, Debug, Progress) from various named colors.
</maml:para>
<maml:para>
</maml:para>
<maml:para>NOTE: for now, even if everything works, there may be some colors for PSReadLine that aren't set, or that are set incorrectly (depending on the theme). If so, please let me know of themes you want to use or of colors that are wrong in the issues at https://GitHub.com/PoshCode/PANSIES/issues
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>ConvertFrom-VSCodeTheme</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="PSPath, Name"><maml:name>Theme</maml:name>
<maml:Description><maml:para>The name of (or full path to) a vscode json theme E.g. 'Dark+' or 'Monokai'
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Scope</maml:name>
<maml:Description><maml:para>User or Machine (supports storing themes per-user or shared for all users). Defaults to User.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">User</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Machine</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>User</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you with the file names for confirmation before running the conversion.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Overwrite any existing theme completely
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Output the theme after converting it so you can, for instance, pipe it to Show-Theme
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Update</maml:name>
<maml:Description><maml:para>Update any existing theme file. You can use this to complement a previously exported iTerm color scheme with complementary PSReadline colors.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows the file names that would be converted if the conversion runs. The conversion is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you with the file names for confirmation before running the conversion.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Overwrite any existing theme completely
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Output the theme after converting it so you can, for instance, pipe it to Show-Theme
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Scope</maml:name>
<maml:Description><maml:para>User or Machine (supports storing themes per-user or shared for all users). Defaults to User.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>User</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="PSPath, Name"><maml:name>Theme</maml:name>
<maml:Description><maml:para>The name of (or full path to) a vscode json theme E.g. 'Dark+' or 'Monokai'
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Update</maml:name>
<maml:Description><maml:para>Update any existing theme file. You can use this to complement a previously exported iTerm color scheme with complementary PSReadline colors.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows the file names that would be converted if the conversion runs. The conversion is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>[string] the name of the theme</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>[PSCustomObject] representing the theme (if -Pasthru)</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>The conversion outputs a .theme.psd1 file to AppData or ProgramData
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>EXAMPLE 1</maml:title>
<dev:code>PS C:\&gt; ConvertFrom-VSCodeTheme Dark+
PS C:\&gt; Import-Theme Dark+</dev:code>
<dev:remarks><maml:para>This example shows how to convert the VSCode Dark+ default theme and then use it in your console.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>ConvertFrom-ITermColors</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Export-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Import-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Show-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Export-PList</command:name>
<command:verb>Export</command:verb>
<command:noun>PList</command:noun>
<maml:description><maml:para>Convert an object to an XML or Binary PList file.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Exports simple data to an Apple-compatible Property List (PList) file.
</maml:para>
<maml:para>Note that this function is only lightly tested, and only supports strings, integers and doubles, dates, bytes, and booleans, as well as arrays or dictionaries of them (as long as the dictionary has string keys).
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Export-PList</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="PSPath"><maml:name>Path</maml:name>
<maml:Description><maml:para>The path where the export will be written
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Binary</maml:name>
<maml:Description><maml:para>If set, Export-PList creates a binary file rather than an XML file
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="io"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>The object(s) to convert. Must be a date, string, double, integer, byte, bool, or an array or dictionary with only those in it.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Binary</maml:name>
<maml:Description><maml:para>If set, Export-PList creates a binary file rather than an XML file
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the cmdlet.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="io"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>The object(s) to convert. Must be a date, string, double, integer, byte, bool, or an array or dictionary with only those in it.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
<dev:type><maml:name>Object[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="PSPath"><maml:name>Path</maml:name>
<maml:Description><maml:para>The path where the export will be written
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; (Get-ConsolePalette).ForEach([string]) | Export-PList -Path palette.xml</dev:code>
<dev:remarks><maml:para>Exports the palette as a PList XML file -- note that this isn't anything like the format that itermcolors files use -- they export colors as dictionaries of Red, Green, Blue ...
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Import-PList</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Export-Theme</command:name>
<command:verb>Export</command:verb>
<command:noun>Theme</command:noun>
<maml:description><maml:para>Exports the current console and PSReadLine colors as a theme
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Read the current values for the 16 console colors and PSReadLine color options and exports them to a .theme.psd1 file for use with Pansies Theme commands.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Export-Theme</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>The name of the theme to export the current settings to
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Overwrite any existing theme file with the given name
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Output the theme after converting it so you can, for instance, pipe it to Show-Theme
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Scope</maml:name>
<maml:Description><maml:para>User or Machine (supports storing themes per-user or shared for all users). Defaults to User.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">User</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Machine</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>User</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Update</maml:name>
<maml:Description><maml:para>Update any existing theme file. You can use this to complement a previously exported VSCode theme with matching ConsoleColors.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Force</maml:name>
<maml:Description><maml:para>Overwrite any existing theme file with the given name
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>The name of the theme to export the current settings to
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>Output the theme after converting it so you can, for instance, pipe it to Show-Theme
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Scope</maml:name>
<maml:Description><maml:para>User or Machine (supports storing themes per-user or shared for all users). Defaults to User.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>User</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Update</maml:name>
<maml:Description><maml:para>Update any existing theme file. You can use this to complement a previously exported VSCode theme with matching ConsoleColors.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>[string] the name of the theme</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>[PSCustomObject] representing the theme (if -Pasthru)</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>Generates a .theme.psd1 file to AppData or ProgramData
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Export-Theme Default</dev:code>
<dev:remarks><maml:para>Saves your current settings as "Default" so you can re-import them later to revert
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>ConvertFrom-ITermColors</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>ConvertFrom-VSCodeTheme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Import-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Show-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-Complement</command:name>
<command:verb>Get</command:verb>
<command:noun>Complement</command:noun>
<maml:description><maml:para>Get the Hue complement color
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Returns a color that is 180 degrees opposite around the Hue component of the HSL color space.
</maml:para>
<maml:para>The primary reason for Get-Complement to exist is for generating contrasting colors for foreground and background. For that reason, it's usually called with `-ForceContrast` mode, which changes the lightness or darkness to increase the contrast of the returned color.
</maml:para>
<maml:para>It also has a `-ConsoleColor` switch that causes it to assume only 16 colors will work (PowerLine currently uses this mode by default because so many terminals don't support more --including Windows 10 prior to Creators Update). In ConsoleColor mode, it always returns White or Black.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-Complement</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>Color</maml:name>
<maml:Description><maml:para>The source color to calculate the complement of
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ConsoleColor</maml:name>
<maml:Description><maml:para>Assume there are only 16 colors. Return either black or white to get a readable contrast color.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ForceContrast</maml:name>
<maml:Description><maml:para>Force the luminance to have "enough" contrast
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>If set, output the input $Color before the complement
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>Color</maml:name>
<maml:Description><maml:para>The source color to calculate the complement of
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ConsoleColor</maml:name>
<maml:Description><maml:para>Assume there are only 16 colors. Return either black or white to get a readable contrast color.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ForceContrast</maml:name>
<maml:Description><maml:para>Force the luminance to have "enough" contrast
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Passthru</maml:name>
<maml:Description><maml:para>If set, output the input $Color before the complement
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>PoshCode.Pansies.RgbColor</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>PoshCode.Pansies.RgbColor</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Get-Complement Cyan</dev:code>
<dev:remarks><maml:para>Gets the color Red back, as the complement for Cyan.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2</maml:title>
<dev:code>PS C:\&gt; $Background, $Foreground = Get-Complement Cyan -Passthru -ConsoleColor
PS C:\&gt; Write-Host " Hello World " -Foreground $Foreground.ConsoleColor -Background $Background.ConsoleColor</dev:code>
<dev:remarks><maml:para>This example shows how using `-Passthru` returns both the original color and the contrasting color, and how using `-ConsoleColor` results in a better contrast when you're being forced to use ConsoleColor (as with the built-in Write-Host command).
</maml:para>
<maml:para>You can try the example without `-ConsoleColor` to see the difference: with it, you'll get Black on Cyan, without, you'll get Red on Cyan. Note that using -ForceContrast will make almost no difference if you're using the `ConsoleColor` property, because downsampling to 16 colors has to result in either Red or DarkRed...
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-Gradient</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-ConsolePalette</command:name>
<command:verb>Get</command:verb>
<command:noun>ConsolePalette</command:noun>
<maml:description><maml:para>Returns the 16 Color Palette configured for the console
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Returns the 16 Color palette defined for the current console (or the defaults for the system)
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-ConsolePalette</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>AddScreenAndPopup</maml:name>
<maml:Description><maml:para>If set, the exported palette will include 4 extra colors representing the default foreground and background and the popup foreground and background.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Default</maml:name>
<maml:Description><maml:para>If set, attempts to read the default console colortable values from the registry, rather than the palette of the current console.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>AddScreenAndPopup</maml:name>
<maml:Description><maml:para>If set, the exported palette will include 4 extra colors representing the default foreground and background and the popup foreground and background.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Default</maml:name>
<maml:Description><maml:para>If set, attempts to read the default console colortable values from the registry, rather than the palette of the current console.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>ConsolePalette</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Get-ConsolePalette -Default</dev:code>
<dev:remarks><maml:para>Get the default console palette
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2</maml:title>
<dev:code>PS C:\&gt; Get-ConsolePalette</dev:code>
<dev:remarks><maml:para>Get the current console palette
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3</maml:title>
<dev:code>PS C:\&gt; (Get-ConsolePalette).FindClosestColor([PoshCode.Pansies.RgbColor]"#336699")</dev:code>
<dev:remarks><maml:para>Finds the closest color in the current 16 color console palette to the specified #336699 shade of blue
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Set-ConsolePalette</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-Gradient</command:name>
<command:verb>Get</command:verb>
<command:noun>Gradient</command:noun>
<maml:description><maml:para>Get a range of colors between two colors
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Get an array (or multiple arrays, one per line) of RgbColor values for a gradient from the start Color to the end Color.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-Gradient</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>StartColor</maml:name>
<maml:Description><maml:para>The left color to start the gradient from.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>EndColor</maml:name>
<maml:Description><maml:para>The right color to end the gradient at.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Length, Count, Steps"><maml:name>Width</maml:name>
<maml:Description><maml:para>The number of columns to generate in the gradient. Defaults to the width of the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>$Host.UI.RawUI.WindowSize.Width</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>Height</maml:name>
<maml:Description><maml:para>The number of rows to generate in the gradient. Defaults to 1
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>$Host.UI.RawUI.WindowSize.Height</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ColorSpace</maml:name>
<maml:Description><maml:para>A color space to render the gradient in. Defaults to HunterLab, but can be any of CMY, CMYK, LAB, LCH, LUV, HunterLAB, HSL, HSV, HSB, RGB, XYZ, YXY
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">CMY</command:parameterValue>
<command:parameterValue required="false" variableLength="false">CMYK</command:parameterValue>
<command:parameterValue required="false" variableLength="false">LAB</command:parameterValue>
<command:parameterValue required="false" variableLength="false">LCH</command:parameterValue>
<command:parameterValue required="false" variableLength="false">LUV</command:parameterValue>
<command:parameterValue required="false" variableLength="false">HunterLAB</command:parameterValue>
<command:parameterValue required="false" variableLength="false">HSL</command:parameterValue>
<command:parameterValue required="false" variableLength="false">HSV</command:parameterValue>
<command:parameterValue required="false" variableLength="false">HSB</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RGB</command:parameterValue>
<command:parameterValue required="false" variableLength="false">XYZ</command:parameterValue>
<command:parameterValue required="false" variableLength="false">YXY</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>HunterLab</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Flatten</maml:name>
<maml:Description><maml:para>Flattens the 2D array to a single array.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Reverse</maml:name>
<maml:Description><maml:para>For color spaces with Hue (HSL, HSV, HSB), setting this generates the gradient the long way, creating a rainbow effect.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ColorSpace</maml:name>
<maml:Description><maml:para>A color space to render the gradient in. Defaults to HunterLab, but can be any of CMY, CMYK, LAB, LCH, LUV, HunterLAB, HSL, HSV, HSB, RGB, XYZ, YXY
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>HunterLab</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>EndColor</maml:name>
<maml:Description><maml:para>The right color to end the gradient at.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Flatten</maml:name>
<maml:Description><maml:para>Flattens the 2D array to a single array.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>Height</maml:name>
<maml:Description><maml:para>The number of rows to generate in the gradient. Defaults to 1
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>$Host.UI.RawUI.WindowSize.Height</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Reverse</maml:name>
<maml:Description><maml:para>For color spaces with Hue (HSL, HSV, HSB), setting this generates the gradient the long way, creating a rainbow effect.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>StartColor</maml:name>
<maml:Description><maml:para>The left color to start the gradient from.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Length, Count, Steps"><maml:name>Width</maml:name>
<maml:Description><maml:para>The number of columns to generate in the gradient. Defaults to the width of the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>$Host.UI.RawUI.WindowSize.Width</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>PoshCode.Pansies.RgbColor[][]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
<command:returnValue><dev:type><maml:name>PoshCode.Pansies.RgbColor[]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Get-Gradient Red Blue -Count 10 -Flatten</dev:code>
<dev:remarks><maml:para>Gets a simple array of ten colors between Red and Blue.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2</maml:title>
<dev:code>PS C:\&gt; Get-Gradient Red Blue</dev:code>
<dev:remarks><maml:para>Gets a 2D gradient from the ConsoleColor Red to Blue, with the width x height the current size of the console.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-Complement</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-Theme</command:name>
<command:verb>Get</command:verb>
<command:noun>Theme</command:noun>
<maml:description><maml:para>List available PANSIES themes, optionally filtering
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>List available PANSIES themes, optionally filtering by partial name or functionality. Specifically, there are switches to only return themes which have full ConsoleColors and/or PSReadline colors defined.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-Theme</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>The name of the theme(s) to show. Supports wildcards, and defaults to * everything.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>*</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ConsoleColors</maml:name>
<maml:Description><maml:para>If set, only returns themes that include ConsoleColor
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PSReadline</maml:name>
<maml:Description><maml:para>If set, only returns themes that include PSReadline Colors
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ConsoleColors</maml:name>
<maml:Description><maml:para>If set, only returns themes that include ConsoleColor
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>The name of the theme(s) to show. Supports wildcards, and defaults to * everything.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>*</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PSReadline</maml:name>
<maml:Description><maml:para>If set, only returns themes that include PSReadline Colors
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Get-Theme -ConsoleColors -PSReadline</dev:code>
<dev:remarks><maml:para>Show all themes which contain both Console colors and PSReadline colors
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>ConvertFrom-ITermColors</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>ConvertFrom-VSCodeTheme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Export-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Import-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Show-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Import-PList</command:name>
<command:verb>Import</command:verb>
<command:noun>PList</command:noun>
<maml:description><maml:para>Convert an XML or Binary PList (property list) file to objects (arrays, string-&gt;object dictionaries, etc).
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Import a PList (XML or binary file) as a string dictionary or array of objects.
</maml:para>
<maml:para>Note that JSON and psd1 filesare not supported, since ConvertFrom-JSON and ConvertFrom-Metadata work fine.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Import-PList</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="PSPath"><maml:name>Path</maml:name>
<maml:Description><maml:para>The path to an XML or binary plist file (e.g. a .tmTheme or .itermcolors file)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="PSPath"><maml:name>Path</maml:name>
<maml:Description><maml:para>The path to an XML or binary plist file (e.g. a .tmTheme or .itermcolors file)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Import-PList argonaut.itermcolors</dev:code>
<dev:remarks><maml:para>Import a PList XML file
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Export-PList</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Import-Theme</command:name>
<command:verb>Import</command:verb>
<command:noun>Theme</command:noun>
<maml:description><maml:para>Imports a PANSIES .theme.psd1 file to style your Console, Host, and PSReadLine
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Imports the theme and applies colors if they're defined to the Console, to PSReadline and to Host.PrivateData (the colors of Error/Warning/Verbose/etc)
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Import-Theme</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>A theme to import (can be the name of an installed PANSIES theme, or the full path to a psd1 file)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>SkipDefault</maml:name>
<maml:Description><maml:para>By default, imported themes will update the default console colors (if they define console colors) If SkipDefault is set, Import-Theme will leave the default Console Colors alone
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>A theme to import (can be the name of an installed PANSIES theme, or the full path to a psd1 file)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>SkipDefault</maml:name>
<maml:Description><maml:para>By default, imported themes will update the default console colors (if they define console colors) If SkipDefault is set, Import-Theme will leave the default Console Colors alone
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Import-Theme Zenburn</dev:code>
<dev:remarks><maml:para>Shows how to import the Zenburn theme by name
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>ConvertFrom-ITermColors</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>ConvertFrom-VSCodeTheme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Export-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Show-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-Text</command:name>
<command:verb>New</command:verb>
<command:noun>Text</command:noun>
<maml:description><maml:para>Create a Text object with specified background and foreground colors
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Create a Text object with specified background and foreground colors, and rendering HTML-style entities like `&amp;hearts;` and `&amp;frac12;` or `&amp;uuml;` and numerical unicode character entities in both decimal (e.g. `&amp;#926;`) and hexadeximal (`&amp;#x39E;`)
</maml:para>
<maml:para>When this object is rendered to the host with .ToString(), it inserts ANSI Virtual Terminal escape sequences for the specified colors, and by default, outputs escape sequences to clear those colors after the text.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-Text</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Object</maml:name>
<maml:Description><maml:para>Specifies objects to display in the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Bg"><maml:name>BackgroundColor</maml:name>
<maml:Description><maml:para>The background color. You may specify it as CSS hex "#RRGGBB" (or just "RRGGBB") or as an XTerm index "xt123" (or just "123") or as a ConsoleColor like "Red" or "DarkRed"...
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Fg"><maml:name>ForegroundColor</maml:name>
<maml:Description><maml:para>The foreground color. You may specify it as CSS hex "#RRGGBB" (or just "RRGGBB") or as an XTerm index "xt123" (or just "123") or as a ConsoleColor like "Red" or "DarkRed"...
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IgnoreEntities</maml:name>
<maml:Description><maml:para>If set, don't render the HTML Entities to characters (i.e. leave "&amp;hearts;" as "&amp;hearts;" instead of as "♥")
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>LeaveColor</maml:name>
<maml:Description><maml:para>If set, don't clear the colors at the end of the output.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Separator</maml:name>
<maml:Description><maml:para>Specifies a separator string to the output between objects displayed on the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Bg"><maml:name>BackgroundColor</maml:name>
<maml:Description><maml:para>The background color. You may specify it as CSS hex "#RRGGBB" (or just "RRGGBB") or as an XTerm index "xt123" (or just "123") or as a ConsoleColor like "Red" or "DarkRed"...
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Fg"><maml:name>ForegroundColor</maml:name>
<maml:Description><maml:para>The foreground color. You may specify it as CSS hex "#RRGGBB" (or just "RRGGBB") or as an XTerm index "xt123" (or just "123") or as a ConsoleColor like "Red" or "DarkRed"...
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IgnoreEntities</maml:name>
<maml:Description><maml:para>If set, don't render the HTML Entities to characters (i.e. leave "&amp;hearts;" as "&amp;hearts;" instead of as "♥")
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>LeaveColor</maml:name>
<maml:Description><maml:para>If set, don't clear the colors at the end of the output.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Object</maml:name>
<maml:Description><maml:para>Specifies objects to display in the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Separator</maml:name>
<maml:Description><maml:para>Specifies a separator string to the output between objects displayed on the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
<command:inputType><dev:type><maml:name>PoshCode.Pansies.RgbColor</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; New-Text "&amp;hearts;" -ForegroundColor Red


BackgroundColor ForegroundColor Object       ToString
--------------- --------------- ------       --------
                [101m [0m Red &amp;hearts;[0m [91m?[39m[0m</dev:code>
<dev:remarks><maml:para>Generates a text object with the hearts symbol (♥) in red. The output shows the BackgroundColor, ForegroundColor, Text (with the entity text in it) and the rendered output when the object is in a string, where the entity will be replaced with the hearts symbol and the colors will take effect.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2</maml:title>
<dev:code>PS C:\&gt; "I $(New-Text "&amp;hearts;" -ForegroundColor "#F00") PS"

I [38;2;255;0;0m?[39m PS</dev:code>
<dev:remarks><maml:para>Outputs the text "I ♥ PS" with the heart in red.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Write-Host</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Set-ConsolePalette</command:name>
<command:verb>Set</command:verb>
<command:noun>ConsolePalette</command:noun>
<maml:description><maml:para>Set the 16 color console palette
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Set the 16 color console palette (and optionally, the default palette)
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Set-ConsolePalette</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Colors</maml:name>
<maml:Description><maml:para>Colors to be used for the console palette. Supports piping in a collection of colors.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor[]</command:parameterValue>
<dev:type><maml:name>RgbColor[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Default</maml:name>
<maml:Description><maml:para>If set, set the default console palette in addition to the current palette
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Set-ConsolePalette</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Palette</maml:name>
<maml:Description><maml:para>The palette to set the console colors. Note that a Palette is just a `List` of 16 (or more) colors.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">IList[RgbColor]</command:parameterValue>
<dev:type><maml:name>IList[RgbColor]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Default</maml:name>
<maml:Description><maml:para>If set, set the default console palette in addition to the current palette
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Colors</maml:name>
<maml:Description><maml:para>Colors to be used for the console palette. Supports piping in a collection of colors.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor[]</command:parameterValue>
<dev:type><maml:name>RgbColor[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Default</maml:name>
<maml:Description><maml:para>If set, set the default console palette in addition to the current palette
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none"><maml:name>Palette</maml:name>
<maml:Description><maml:para>The palette to set the console colors. Note that a Palette is just a `List` of 16 (or more) colors.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">IList[RgbColor]</command:parameterValue>
<dev:type><maml:name>IList[RgbColor]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>[IList[RgbColor]] A ConsolePalette or other list of 16 RGBColor values</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
<command:inputType><dev:type><maml:name>[RgbColor[]]</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Get-ConsolePalette | Set-ConsolePalette -Default</dev:code>
<dev:remarks><maml:para>This example shows how to use Set-ConsolePalette with pipeline input to upgrade the current palette to the default palette.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>Get-ConsolePalette</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Show-Theme</command:name>
<command:verb>Show</command:verb>
<command:noun>Theme</command:noun>
<maml:description><maml:para>Show a preview of a PANSIES theme
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Show a preview of a theme, using the old-school gYw table, a simple side-by-side view of bright and dark colors, a code sample, and optionally a larger block of text colors on common backgrounds
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Show-Theme</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="Theme, PSPath"><maml:name>Name</maml:name>
<maml:Description><maml:para>The name of the color theme to display
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MoreText</maml:name>
<maml:Description><maml:para>Adds an additional block with more text on the most common background colors
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>NoCodeSample</maml:name>
<maml:Description><maml:para>Supresses the code sample output
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Tiny</maml:name>
<maml:Description><maml:para>Supresses the large color table
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>MoreText</maml:name>
<maml:Description><maml:para>Adds an additional block with more text on the most common background colors
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="Theme, PSPath"><maml:name>Name</maml:name>
<maml:Description><maml:para>The name of the color theme to display
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>NoCodeSample</maml:name>
<maml:Description><maml:para>Supresses the code sample output
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Tiny</maml:name>
<maml:Description><maml:para>Supresses the large color table
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>[String] (the theme name)</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>[String] (a string with embedded ANSI escape sequences to demonstrate the theme)</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>Although this is a `Show` command, it actually just returns a string for display on the console. There are lots of escape sequences, but no other formatting.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Show-Theme Zenburn -Tiny</dev:code>
<dev:remarks><maml:para>Shows a small version of the preview with just the side-by-side colors and code preview
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>ConvertFrom-ITermColors</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>ConvertFrom-VSCodeTheme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Export-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Import-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Get-Theme</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Write-Host</command:name>
<command:verb>Write</command:verb>
<command:noun>Host</command:noun>
<maml:description><maml:para>Backwards compatible Write-Host replacement which writes customized output to a host, but using full RGB color values.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>The Write-Host cmdlet customizes output. You can specify the color of text by using the ForegroundColor parameter, and you can specify the background color by using the BackgroundColor parameter. The Separator parameter lets you specify a string to use to separate displayed objects. The particular result depends on the program that is hosting Windows PowerShell.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Write-Host</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>Object</maml:name>
<maml:Description><maml:para>Specifies objects to display in the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>BackgroundColor</maml:name>
<maml:Description><maml:para>Specifies the background color. There is no default. The acceptable values for this parameter are:
</maml:para>
<maml:para>CSS Hex representations of RGB colors like "#FF00FF" or "FF00FF"
</maml:para>
<maml:para>XTerm indexes like "xt138" or "123"
</maml:para>
<maml:para>Console Color names:
</maml:para>
<maml:para>- Black
</maml:para>
<maml:para>- DarkBlue
</maml:para>
<maml:para>- DarkGreen
</maml:para>
<maml:para>- DarkCyan
</maml:para>
<maml:para>- DarkRed
</maml:para>
<maml:para>- DarkMagenta
</maml:para>
<maml:para>- DarkYellow
</maml:para>
<maml:para>- Gray
</maml:para>
<maml:para>- DarkGray
</maml:para>
<maml:para>- Blue
</maml:para>
<maml:para>- Green
</maml:para>
<maml:para>- Cyan
</maml:para>
<maml:para>- Red
</maml:para>
<maml:para>- Magenta
</maml:para>
<maml:para>- Yellow
</maml:para>
<maml:para>- White
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>ForegroundColor</maml:name>
<maml:Description><maml:para>Specifies the text color. There is no default. The acceptable values for this parameter are:
</maml:para>
<maml:para>CSS Hex representations of RGB colors like "#FF00FF" or "FF00FF"
</maml:para>
<maml:para>XTerm indexes like "xt138" or "123"
</maml:para>
<maml:para>Console Color names:
</maml:para>
<maml:para>- Black
</maml:para>
<maml:para>- DarkBlue
</maml:para>
<maml:para>- DarkGreen
</maml:para>
<maml:para>- DarkCyan
</maml:para>
<maml:para>- DarkRed
</maml:para>
<maml:para>- DarkMagenta
</maml:para>
<maml:para>- DarkYellow
</maml:para>
<maml:para>- Gray
</maml:para>
<maml:para>- DarkGray
</maml:para>
<maml:para>- Blue
</maml:para>
<maml:para>- Green
</maml:para>
<maml:para>- Cyan
</maml:para>
<maml:para>- Red
</maml:para>
<maml:para>- Magenta
</maml:para>
<maml:para>- Yellow
</maml:para>
<maml:para>- White
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>NoNewline</maml:name>
<maml:Description><maml:para>Specifies that the content displayed in the console does not end with a newline character.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Separator</maml:name>
<maml:Description><maml:para>Specifies a separator string to the output between objects displayed on the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>BackgroundColor</maml:name>
<maml:Description><maml:para>Specifies the background color. There is no default. The acceptable values for this parameter are:
</maml:para>
<maml:para>CSS Hex representations of RGB colors like "#FF00FF" or "FF00FF"
</maml:para>
<maml:para>XTerm indexes like "xt138" or "123"
</maml:para>
<maml:para>Console Color names:
</maml:para>
<maml:para>- Black
</maml:para>
<maml:para>- DarkBlue
</maml:para>
<maml:para>- DarkGreen
</maml:para>
<maml:para>- DarkCyan
</maml:para>
<maml:para>- DarkRed
</maml:para>
<maml:para>- DarkMagenta
</maml:para>
<maml:para>- DarkYellow
</maml:para>
<maml:para>- Gray
</maml:para>
<maml:para>- DarkGray
</maml:para>
<maml:para>- Blue
</maml:para>
<maml:para>- Green
</maml:para>
<maml:para>- Cyan
</maml:para>
<maml:para>- Red
</maml:para>
<maml:para>- Magenta
</maml:para>
<maml:para>- Yellow
</maml:para>
<maml:para>- White
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>ForegroundColor</maml:name>
<maml:Description><maml:para>Specifies the text color. There is no default. The acceptable values for this parameter are:
</maml:para>
<maml:para>CSS Hex representations of RGB colors like "#FF00FF" or "FF00FF"
</maml:para>
<maml:para>XTerm indexes like "xt138" or "123"
</maml:para>
<maml:para>Console Color names:
</maml:para>
<maml:para>- Black
</maml:para>
<maml:para>- DarkBlue
</maml:para>
<maml:para>- DarkGreen
</maml:para>
<maml:para>- DarkCyan
</maml:para>
<maml:para>- DarkRed
</maml:para>
<maml:para>- DarkMagenta
</maml:para>
<maml:para>- DarkYellow
</maml:para>
<maml:para>- Gray
</maml:para>
<maml:para>- DarkGray
</maml:para>
<maml:para>- Blue
</maml:para>
<maml:para>- Green
</maml:para>
<maml:para>- Cyan
</maml:para>
<maml:para>- Red
</maml:para>
<maml:para>- Magenta
</maml:para>
<maml:para>- Yellow
</maml:para>
<maml:para>- White
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">RgbColor</command:parameterValue>
<dev:type><maml:name>RgbColor</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>NoNewline</maml:name>
<maml:Description><maml:para>Specifies that the content displayed in the console does not end with a newline character.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>Object</maml:name>
<maml:Description><maml:para>Specifies objects to display in the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Separator</maml:name>
<maml:Description><maml:para>Specifies a separator string to the output between objects displayed on the console.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
<command:inputType><dev:type><maml:name>PoshCode.Pansies.RgbColor</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1: Write to the console and include a separator</maml:title>
<dev:code>PS C:\&gt; Write-Host (2,4,6,8,10,12) -Separator ", +2= "
2, +2= 4, +2= 6, +2= 8, +2= 10, +2= 12</dev:code>
<dev:remarks><maml:para>This command displays the even numbers from 2 through 12. The Separator parameter is used to add the string ", +2= " (comma, space, +, 2, =, space).
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2: Write with different text and background colors</maml:title>
<dev:code>PS C:\&gt; Write-Host (2,4,6,8,10,12) -Separator ", -&gt; " -ForegroundColor DarkGreen -BackgroundColor white</dev:code>
<dev:remarks><maml:para>This command displays the even numbers from 2 through 12. It uses the ForegroundColor parameter to output dark green text and the BackgroundColor parameter to display a white background.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 3: Write with different text and background colors</maml:title>
<dev:code>PS C:\&gt; Write-Host "Red on white text." -ForegroundColor "#FF0000" -BackgroundColor "#FFFFFF"
Red on white text.</dev:code>
<dev:remarks><maml:para>This command displays the string "Red on white text." The text is red, as defined by the ForegroundColor parameter. The background is white, as defined by the BackgroundColor parameter.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>New-Text</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Clear-Host</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Write-Debug</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Write-Error</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Write-Output</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Write-Progress</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Write-Verbose</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>Write-Warning</maml:linkText>
<maml:uri></maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
</helpItems>
